# rest_api.conf
# upstream definition
upstream api {
    ip_hash;
    server unix:/tmp/uwsgi.sock max_fails=5 fail_timeout=30s;
    keepalive 32;
}

map $request_method $purge_method {
    PURGE   1;
    default 0;
}

# configuration of the HTTP server
server {
    # the port your site will be served on, default_server indicates that this server block
    # is the block to use if no blocks match the server_name
    listen      80 default_server;
    listen      8080 default_server;


    set $ensembl_header "CTTVGSK";

    charset     utf-8;
    # max upload size
    client_max_body_size 75M;

    set $no_cache "0";

    if ($request_uri ~ .*request_token.*) {
            set $no_cache "1";
    }
    if ($request_uri ~ .*no_cache.*) {
            set $no_cache "1";
    }

    location / { try_files $uri $uri/ @rest_api; }
    include /etc/nginx/sites-enabled/nginx-proxy.conf;
    include /etc/nginx/sites-enabled/nginx-rest-api.conf;
    include /etc/nginx/sites-enabled/nginx-custom.conf;
}


server {
    # the port your site will be served on, default_server indicates that this server block
    # is the block to use if no blocks match the server_name
    listen      443 ssl http2 default_server;
    listen      8009 ssl http2 default_server;

    ssl_certificate /etc/ssl/nginx/server.crt;
    ssl_certificate_key /etc/ssl/nginx/server.key;

    set $ensembl_header "CTTVGSK";
    charset     utf-8;
    # max upload size
    client_max_body_size 75M;

    set $no_cache "0";

    if ($request_uri ~ .*request_token.*) {
            set $no_cache "1";
    }
    if ($request_uri ~ .*no_cache.*) {
            set $no_cache "1";
    }

    location / {
        try_files $uri $uri/ @rest_api;
    }
    include /etc/nginx/sites-enabled/nginx-proxy.conf;
    include /etc/nginx/sites-enabled/nginx-rest-api.conf;
    include /etc/nginx/sites-enabled/nginx-custom.conf;
}