swagger: '2.0'
#TODO be replaced by the app and specify in config
host: "platform-api.opentargets.io"
#replaced by the app
basePath: "/v${API_VERSION}"
info:
  version: 19.02.1
  title: Open Targets Platform REST API
  #replaced by the app from api-description.md
  description: Open Targets Platform REST API
  x-logo:
    url: "https://www.targetvalidation.org/imgs/logo/ot_logo_webheader.svg"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Open Targets Platform team
    email: support@targetvalidation.org
tags:
  - name: filter
    # open: true
    description: Methods to filter the available evidence.
  - name: retrieve
    # open: true
    description: Methods to get specific evidence.
  - name: search
    # open: true
    description: Methods to search for target or diseases.
  - name: public
    # open: true
    description: Publicly supported stable API.
  - name: private
    description: Unstable API methods. Subject to change without prior notice. Use at your own risk.
    # open: false
  - name: utils
    # open: true
    description: Utility methods.
x-tagGroups:
  - name: Stable
    tags:
      - filter
      - retrieve
      - search
  - name: Utilities
    tags:
      - utils
      - private
  - name: All
    tags:
      - public
      - private
consumes:
  - application/json
produces:
  - application/json
  - text/xml
  - text/tab-separated-values
  - text/csv
# Describe your paths here
paths:
  /platform/swagger:
    get:
      summary: Get OpenAPI schema
      operationId: getSwagger
      tags:
        - private
      description: Get swagger.yaml specs for the API
      produces:
      - "text/yaml"
      responses:
        200:
          description: "Swagger.yaml file"
  /platform/docs:
    get:
      summary: Browse API documentation
      operationId: getApiDocs
      tags:
        - private
      description: Access api docs as served by Redoc
      produces:
      - "application/json"
      responses:
        200:
          description: "Redoc API documentation file"
  /platform/docs/swagger-ui:
    get:
      summary: Browse interactive API documentation
      operationId: getApiSwaggerUI
      tags:
        - private
      description: Interactive API docs using swagger-ui
      produces:
      - "application/json"
      responses:
        200:
          description: "Swagger-UI API documentation file"
  /platform/public/evidence:
    get:
      summary: Get evidence by ID
      operationId: getEvidenceById
      tags:
        - public
        - retrieve
      description: |
        We call **evidence** a unit of data that support a connection between a target and a disease.
        The Open Targets Platform integrates multiple types of evidence including genetic associations,
        somatic mutations, RNA expression and target-disease associations mined from the literature.
        This method allows you to retrieve a single evidence item or a list of pieces of evidence by using their
        targetvalidation.org ID.

        Evidence IDs are unique within each data release (e.g. `8ed3d7568a8c6cac9c95cfb869bac762` for release 1.2).
        You can obtain a list of evidence and their IDs from other API calls such as [/public/evidence/filter](#!/public/get_public_evidence_filter).

        **Please note** that a specific evidence ID may change between data releases. We can not guarantee that a specific evidence ID will refer to the same piece of evidence connecting a target and its diseases.
      parameters:
        - name: id
          in: query
          description: Internal unique ID of the evidence string to retrieve.
          required: true
          type: string
      responses:
        200:
          description: Successful response
    post:
      summary: Get evidence for a list of IDs
      operationId: postEvidenceById
      tags:
        - public
        - retrieve
      description: |
        This is the POST version of [/public/evidence](#!/public/get_public_evidence).
        It allows to query for a list of evidence strings encoded in a `json` object to be passed in the body.
      parameters:
        - name: body
          in: body
          schema:
            type: string
            example: |
              {"id":["id1", "id2"]}
          description: IDs of the evidence string to retrieve.
          required: true
      responses:
        200:
          description: Successful response
  /platform/public/evidence/filter:
    get:
      summary: Filter available evidence
      operationId: getEvidenceFilter
      tags:
        - public
        - filter
      description: |
        The filter method allows to retrieve the specific data that supports a connection between targets and diseases.
        Filters can be used to restrict the results by source and type of data,
        or limit results to targets which are part of a particular pathway.
        Minimum and maximum scores can be specified as well as the type of evidence linking target and disease.
        **Note** that multiple genes and diseases can be specified in the same request.
      parameters:
        - name: target
          in: query
          description: A target identifier listed as target.id.
          required: false
          type: string
        - name: disease
          in: query
          description: An EFO code listed as disease.id.
          required: false
          type: string
        - name: data source
          in: query
          description: Data source to consider.
          required: false
          type: string
        - name: datatype
          in: query
          description: Data type to consider.
          required: false
          type: string
        - name: pathway
          in: query
          description: A pathway identifier (meaning all the targets linked to that pathway).
          required: false
          type: string
        - name: uniprotkw
          in: query
          description: A UniProt keyword (meaning all the targets linked to that keyword).
          required: false
          type: string
        - name: datastructure
          in: query
          description: Type of data structure to return. Can be 'full', 'simple', 'ids', or 'count'.
          required: false
          type: string
        - name: fields
          in: query
          description: The fields you want to retrieve. This will get priority over the data structure requested.
          required: false
          type: string
        - name: scorevalue_min
          in: query
          description: Filter by minimum score value. The default is 0, but using 0.2 is a good trade-off to filter lower quality data points.
          required: false
          type: number
          format: float
          default: 0.
        - name: scorevalue_max
          in: query
          description: Filter by maximum score value.
          required: false
          type: number
          format: float
        - name: sort
          in: query
          description: |
            Sort by the given field. The default is 'scores.association_score' in descending order. Use '~' prefix to do ascending
            order e.g. '~scores.association_score'. It supports multiple entries.
          required: false
          type: string
        - name: size
          in: query
          description: Maximum amount of results to return. Defaults to 10, max is 10000.
          required: false
          type: number
          format: integer
        - name: from
          in: query
          description: How many initial results should be skipped. Defaults to 0.
          required: false
          type: number
          format: integer
        - name: format
          in: query
          description: Format to get the data back. Can be 'json', 'xml', 'tab' or 'csv'. **Note** that this option can only be used when calling the API directly and will not work in this page. The response here will always be JSON.
          required: false
          type: string
      responses:
        200:
          description: Successful response
      x-code-samples:
        - lang: 'httpie'
          source: |
            http https://www.targetvalidation.org/api/latest/public/evidence/filter target==ENSG00000167207 disease==EFO_0003767 datastructure==simple

    post:
      summary: Batch filter available evidence
      operationId: postEvidenceFilter
      tags:
        - public
        - filter
      description: |
        POST version of [/public/evidence/filter](#!/public/get_public_evidence_filter).
        Filters can be specified as part of a `json` object in the body, simplifying the submission of queries.
      parameters:
        - name: body
          in: body
          schema:
            type: string
            example: |
              {"target":["ENSG00000094755", "ENSG00000167207"], "disease":["EFO_0003767"]}
          description: Filters to apply when retrieving evidence string objects.
          required: true
      responses:
        200:
          description: Successful response
  /platform/public/association:
    get:
      summary: Get association by id
      operationId: getAssociationById
      tags:
        - public
        - retrieve
      description: |
       Once we integrate all evidence connecting a target to a specific disease, we
        compute an association score by the means of an harmonic sum. This *association score* provides
        an indication of how strong the evidence behind each connection is and can be
        used to rank genes in order of likelihood as drug targets.
        The association ID is constructed by using the Ensembl ID of the gene and the
        EFO ID for the disease (e.g. ENSG00000073756-EFO_0003767).
        The method returns an association object, which contains the data and summary
        on each evidence type included in the calculation of the score, as well as the score itself.
      parameters:
        - name: id
          in: query
          description: An association ID usually in the form of `TARGET_ID-DISEASE_ID`.
          required: true
          type: string
      responses:
        200:
          description: Successful response
  /platform/public/association/filter:
    get:
      summary: Filter available associations
      operationId: getAssociationFilter
      tags:
        - public
        - filter
      description: |
        More complex queries for associations scores and objects can be done using
        this method, which allows to sort in different order, restrict to a specific class
        of diseases or targets, as well as filtering results by score and associated pathways.
      parameters:
        - name: target
          in: query
          description: A target identifier listed as target.id.
          required: false
          type: string
        - name: disease
          in: query
          description: An EFO code listed as disease.id.
          required: false
          type: string
        - name: therapeutic_area
          in: query
          description: An EFO code of a therapeutic area.
          required: false
          type: string
        - name: datasource
          in: query
          description: Data source to consider.
          required: false
          type: string
        - name: datatype
          in: query
          description: Data type to consider.
          required: false
          type: string
        - name: pathway
          in: query
          description: A Reactome pathway identifier (returning only those targets linked to the specified pathway).
          required: false
          type: string
        - name: target_class
          in: query
          description: A ChEMBL target class identifier (returning only those targets belonging to the specified class).
          required: false
          type: string
        - name: uniprotkw
          in: query
          description: A UniProt keyword (meaning all the targets linked to that keyword).
          required: false
          type: string
        - name: direct
          in: query
          description: If `true`, it returns associations that have at least one direct evidence connecting the target and the disease. If `false` it only returns associations for which there is no direct evidence connecting the target and the disease, but only evidence connecting the target to a children of the disease in the EFO ontology.
          required: false
          type: boolean
        - name: datastructure
          in: query
          description: Type of data structure to return. Can be 'full', 'simple', 'ids', or 'count'.
          required: false
          type: string
        - name: fields
          in: query
          description: Fields you want to retrieve. This will get priority over the data structure requested.
          required: false
          type: string
        - name: facets
          in: query
          description: Returns facets
          required: false
          type: boolean
          default: false
        - name: scorevalue_min
          in: query
          description: Filter by minimum score value. The default is 0, but using 0.2 is a good trade-off to filter lower quality data points.
          required: false
          type: number
          format: float
          default: 0
        - name: scorevalue_max
          in: query
          description: Filter by maximum score value.
          required: false
          type: number
          format: float
        - name: scorevalue_types
          in: query
          description: Score types to apply the score value min and max filters. The default is `overall`.
          required: false
          type: string
        - name: size
          in: query
          description: Maximum amount of results to return. Defaults to 10, max is 10000.
          required: false
          type: number
          format: integer
        - name: from
          in: query
          description: How many initial results should be skipped. Defaults to 0.
          required: false
          type: number
          format: integer
        - name: format
          in: query
          description: Format to get the data back. Can be 'json', 'xml', 'tab' or 'csv'. **Note** that this option can only be used when calling the API directly and will not work in this page. The response here will always be JSON.
          required: false
          type: string
        - name: sort
          in: query
          description: |
            Sort by the given score type. Defaults to 'overall' and descending order. Use '~' prefix to do ascending
            order e.g. '~overall'. You will call a data type score like: 'datatypes.literature', and a data source as
            'datasources.gwas'. Supports multiple entries.
          required: false
          type: string
        - name: search
          in: query
          description: |
            Restrict the filtered results to those matching the passed string. The matching is done with a
            phrase match prefix.
          required: false
          type: string
      responses:
        200:
          description: Successful response
      x-code-samples:
        - lang: 'httpie'
          source: |
            http https://www.targetvalidation.org/api/latest/public/association/filter target==ENSG00000167207 disease==EFO_0003767
    post:
      summary: Batch query available associations
      operationId: postAssociationFilter
      tags:
        - public
        - filter
      description: |
        Complex queries and filters for association objects can also be submitted using a JSON
        object and the equivalent POST method.
      parameters:
        - name: body
          in: body
          schema:
            type: string
            example: |
              {"target":["target1", "target2"]}
          description: Filters to apply when retrieving association objects.
          required: true
      responses:
        200:
          description: Successful response
  /platform/private/disease/{disease}:
    get:
      summary: Find information about a disease
      operationId: getDiseaseById
      tags:
        - private
      description: |
        Get `disease` objects.
      parameters:
        - name: disease
          in: path
          type: string
          required: true
          description: An EFO identifier.
      responses:
        200:
          description: Successful response
  /platform/private/disease:
    post:
      summary: Find information about a list of diseases
      operationId: postDiseaseById
      tags:
        - private
      description: |
        Get `disease` objects.
      parameters:
        - name: body
          in: body
          schema:
            type: string
            example: |
              {"disease":["disease1", "disease2"],
              "facets" = "true"}
          description: An EFO identifier.
          required: true
      responses:
        200:
          description: Successful response
  /platform/private/drug/{DRUG_ID}:
    get:
      summary: Get drug by ID
      operationId: getDrugByID
      tags:
        - private
      description: |
        Get `drug` objects.
      parameters:
        - name: drug_id
          in: path
          type: string
          required: true
          description: An ID in the drug index.
      responses:
        200:
          description: Successful response
  /platform/private/eco/{ECO_ID}:
    get:
      summary: Get evidence code by ID
      operationId: getECObyID
      tags:
        - private
      description: |
        Get `ECO` objects.
      parameters:
        - name: ECO_ID
          in: path
          type: string
          required: true
          description: An [evidence code ontology](http://www.ebi.ac.uk/ols/v2/browse.do?ontName=ECO) ID.
      responses:
        200:
          description: Successful response
  /platform/private/target/{target}:
    get:
      summary: Find information about a target
      operationId: getTargetByENSGID
      tags:
        - private
      description: |
        Get `target` objects.
      parameters:
        - name: target
          in: path
          required: true
          description: An Ensembl gene ID for the target of interest.
          type: string
      responses:
        200:
          description: Successful response
  /platform/private/target:
    post:
      summary: Find information about a list of targets
      operationId: postTargetByENSGID
      tags:
        - private
      description: |
         Get `target` objects. Used for the target profile page.
      parameters:
        - name: body
          in: body
          schema:
            type: string
            example: |
              {"target":["target1", "target2"],
              "facets" = "true"}
          description: An Ensembl gene identifier.
          required: true
      responses:
        200:
          description: Successful response
      x-code-samples:
        - lang: 'Python'
          source: |
            import requests
            r = requests.get('http://api.opentargets.io/v3/platform/private/target/ENSG00000064687')
            for ph in r.json()['mouse_phenotypes'][0]['phenotypes']:
                    try:
                        for link in ph['genotype_phenotype']:
                            print(
                                link['mp_identifier'],
                                'https://europepmc.org/search?query=EXT_ID:'+link['pmid'],
                                link['mp_label'],
                                sep="\t")
                    except KeyError:
                        pass
  /platform/private/target/expression:
    get:
      summary: Query expression levels
      operationId: getTargetExpressionByENSGID
      tags:
        - private
      description: |
        Get `gene-expression` objects.
      parameters:
        - name: gene
          in: query
          description: An Ensembl gene identifier.
          required: true
          type: string
      responses:
        200:
          description: Successful response
    post:
      summary: Batch query expression levels
      operationId: postTargetExpressionByENSGID
      tags:
        - private
      description: |
        Get `gene-expression` objects.
      parameters:
        - name: body
          in: body
          schema:
            type: string
            example: |
              {"gene":["gene1", "gene2"]}
          description: An Ensembl gene identifier.
          required: true
      responses:
        200:
          description: Successful response
  /platform/private/relation/target/{target}:
    get:
      summary: Find related entities by target
      operationId: getRelationByENSGID
      tags:
        - private
      description: |
        Get `relation` objects starting from diseases.
      parameters:
        - name: target
          in: path
          description: An Ensembl gene identifier.
          required: true
          type: string
      responses:
        200:
          description: Successful response
  /platform/private/relation:
    post:
      summary: Find related entities
      operationId: postRelation
      tags:
        - private
      description: |
        Get `relation` objects.
      parameters:
        - name: body
          in: body
          schema:
            type: string
            example: |
              {"subject":["gene1", "gene2"]}
          description: An Ensembl gene identifier.
          required: true
      responses:
        200:
          description: Successful response
  /platform/private/relation/disease/{disease}:
    get:
      summary: Find related entities by disease
      operationId: getRelationByEFOID
      tags:
        - private
      description: |
        Get `relation` objects starting from diseases.
      parameters:
        - name: disease
          in: path
          description: An EFO gene identifier.
          required: true
          type: string
      responses:
        200:
          description: Successful response
  /platform/private/besthitsearch:
    post:
      summary: Find the best hit
      operationId: postBestHitSearch
      tags:
        - private
      description: |
        Fire the search method for multiple strings
      parameters:
        - name: body
          in: body
          schema:
            type: string
            # type: array
            # minItems: 1
            # maxItems: 200
            # items:
            #   type: string
          description: list of strings to search for
          required: true
      responses:
        200:
          description: Successful response
  /platform/private/enrichment/targets:
    post:
      summary: Enrichment analysis
      operationId: postEnrichmentTarget
      tags:
        - private
      description: |
        Returns an enrichment analysis for a list of targets passed in the body
      parameters:
        - name: body
          in: body
          schema:
            type: string
            example: |
              {"target" : ["ENSG00000001", "ENSG00000002"],
               "pvalue" : 0.001,
               "size" : 20}
          description: IDs of the targets to do the enrichment analysis for.
          required: true
      responses:
        200:
          description: Successful response
  /platform/public/search:
    get:
      summary: Search for a disease or a target
      operationId: getSearch
      tags:
        - public
        - search
      description: |
        This method allows you to look for gene or diseases of interest using a free text search,
        replicating the functionality of the search box on our homepage. It should be used to identify
        the best match for a disease or target of interest, rather than gathering a specific set of evidence.
      parameters:
        - name: q
          in: query
          description: A full text query.
          required: true
          type: string
        - name: size
          in: query
          description: Maximum amount of results to return. Defaults to 10, max is 10000.
          required: false
          type: string
        - name: from
          in: query
          description: How many initial results should be skipped. Defaults to 0.
          required: false
          type: string
        - name: filter
          in: query
          description: Restrict the search to the type requested. Eg. `target` or `disease`.
          required: false
          type: string
      responses:
        200:
          description: Successful response
      x-code-samples:
        - lang: 'httpie'
          source: |
            http https://api.opentargets.io/api/latest/public/search q==NOD2 size==1 filter==target
        - lang: 'Python'
          source: |
            import requests
            from pprint import pprint
            r = requests.get('https://www.targetvalidation.org/api/latest/public/search',
                            params={"q":"NOD2","size":1})
            pprint(r.json())


  /platform/private/quicksearch:
    get:
      summary: Search most relevant results
      operationId: getQuickSearch
      tags:
        - private
      description: |
        Get `search-result` objects. Enables search bar functionality.
      parameters:
        - name: q
          in: query
          description: A full text query.
          required: true
          type: string
        - name: size
          in: query
          description: Maximum amount of results to return. Defaults to 5.
          required: false
          type: string
      responses:
        200:
          description: Successful response
  /platform/private/autocomplete:
    get:
      summary: Get `autocomplete` objects.
      operationId: getAutocomplete
      tags:
        - private
      description: |
        Search for the closest term to autocomplete in the search box.
      parameters:
        - name: q
          in: query
          description: A full text query.
          required: true
          type: string
        - name: size
          in: query
          description: Maximum amount of results to return. Defaults to 5.
          required: false
          type: string
      responses:
        200:
          description: Successful response
  /platform/public/utils/ping:
    get:
      summary: Ping service
      operationId: getPing
      tags:
        - public
        - utils
      description: |
        Check if the API is up
      responses:
        200:
          description: Successful response
  /platform/public/utils/version:
    get:
      summary: Get API version
      operationId: getVersion
      tags:
        - public
        - utils
      description: |
        Returns current API version.
      responses:
        200:
          description: Successful response
      x-code-samples:
        - lang: 'Shell'
          source: |
            curl -X GET https://www.targetvalidation.org/api/latest/public/utils/version
  /platform/public/utils/stats:
    get:
      summary: Get statistics about the current data release
      operationId: getDataStats
      tags:
        - public
        - utils
      description: |
        Returns the number of associations and evidences, divided by datasource.
      responses:
        200:
          description: Successful response
      x-code-samples:
        - lang: 'Python'
          source: |
            import requests
            r = requests.get('https://www.targetvalidation.com/api/latest/public/stats')
            assert r.status_code == 200
            assert r.headers['content-type'] == 'application/json'
            print(r.json())
  /platform/public/utils/metrics:
    get:
      summary: Get metrics about the current data release
      operationId: getDataMetrics
      tags:
        - public
        - utils
      description: |
        Returns the metrics about associations and evidences, divided by datasource, genes and so on.
      responses:
        200:
          description: Successful response
      x-code-samples:
        - lang: 'Python'
          source: |
            import requests
            r = requests.get('https://www.targetvalidation.com/api/latest/public/metrics')
            assert r.status_code == 200
            assert r.headers['content-type'] == 'application/json'
            print(r.json())
  /platform/public/utils/therapeuticareas:
    get:
      summary: Get the list of therapeutic areas about the current data release
      operationId: getTherapeuticAreas
      tags:
        - public
        - utils
      description: |
        Returns the list of therapeutic areas for the current data release
      responses:
        200:
          description: Successful response
      x-code-samples:
        - lang: 'Python'
          source: |
            import requests
            r = requests.get('https://www.targetvalidation.com/api/latest/public/therapeuticareas')
            assert r.status_code == 200
            assert r.headers['content-type'] == 'application/json'
            print(r.json())